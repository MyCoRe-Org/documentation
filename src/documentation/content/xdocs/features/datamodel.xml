<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/dtd/document-v12.dtd">
<document>

  <header>
    <title>MyCoRe Datenmodellierung</title>
  </header>

  <body>

    <section>
      <title>Metadatenmodell für Objekte</title>
      <p>
        Statt ein fixes Datenmodell wie Dublin Core vorzugeben, lässt sich das Metadatenmodell einer
        MyCoRe Anwendung frei konfigurieren:
      </p>
      <ul>
        <li>
          Datentypen definieren Art und mögliche Werte der Felder eines Objektes.
          Vordefinierte Datentypen sind z. B. Text, Zahl, Boolean (Ja/Nein), Datum,
          Name, Verweis (Link), Kategorie, XML.
        </li>
        <li>
          Objekttypen definieren, welche Felder zur Beschreibung gleichartiger Objekte
          verwendet werden, welchen Datentyps diese sind, und ob sie verpflichtend oder wiederholbar sind.
        </li>
        <li>
          Objekte können untereinander in einer Beziehung stehen. Dies kann ein Verweis sein
          (z. B. "E-Publikation" verweist auf "Person"), oder eine Vater-Kind-Beziehung
          ("ist-Teil-von", "besteht aus") mit Existenzabhängigkeit, z. B. Objekt "Zeitschrift" enthält "Artikel".
        </li>
        <li>
          Beispiel:
          <ul>
            <li>
              Objekttyp "E-Publikation" mit den Feldern "Titel (Text, mehrsprachig, verpflichtend, wiederholbar",
              "Autor" (Verweis auf Person, optional, wiederholbar)...
            </li>
            <li>
              Objekttyp "Person" mit den Feldern "Name", Geburtsdatum (Datum, optional, nicht wiederholbar), ...
            </li>
          </ul>
        </li>
      </ul>
      <p>
        Neben den vordefinierten Datentypen können eigene Datentypen als Java-Klassen implementiert werden.
      </p>
      <p>
        Ein spezieller Datentyp ist der XML-Datentyp. Felder dieses Typs können eine 
        beliebige XML-Struktur enthalten (ggf. durch ein XML Schema spezifiziert). 
        So können beliebige XML-Datenmodelle wie z. B. MODS zur Beschreibung von Objekten verwendet werden.
      </p>
      <p>
        MODS ist ein XML-basiertes Metadatenschema der Library of Congress, für das MyCoRe bereits eine 
        spezielle Unterstützung mit vordefinierter Funktionalität bietet. Dazu gehören etwa der direkte 
        Import von MODS-Metadaten und die Abbildung auf MyCoRe Klassifikationen.
      </p>
      <p>
        Für Vater-Kind-Beziehungen zwischen Objekten bietet MyCoRe weiterhin einen Vererbungsmechanismus 
        für Metadaten. Kindobjekte können dabei über mehrere Hierarchiestufen hinweg Werte bestimmter Felder 
        von den übergeordneten Obekten erben. Ein Zeitschriftenartikel könnte z. B. das Veröffentlichungsdatum 
        des Heftes erben, in dem der Artikel erschienen ist. Vererbung bezieht sich hier also auf die Werte 
        der Metadaten, nicht auf die Datenmodelldefinition (Vererbung im objektorientierten Sinne).
      </p>
      <p>
        Die Metadaten aller MyCoRe Objekte werden intern als XML-Dokumente gespeichert. Dies unterstützt 
        Strategien der Langzeitarchivierung und stellt sicher, dass Metadaten auch unabhängig von MyCoRe 
        zu einem späteren Zeitpunkt weiter verarbeitet werden können.
      </p>
      <p>
        Intern ist jedes MyCoRe Objekt dabei in drei Bereiche unterteilt:
      </p>
      <dl>
        <dt><code>metadata</code></dt>
        <dd>
          im metadata Teil werden die Werte der Datenfelder gespeichert, die das Objekt beschreiben, 
          die eigentlichen Metadaten.
        </dd>
        <dt><code>structure</code></dt>
        <dd>
          im structure Teil werden die Vater-Kind-Beziehungen zwischen Objekten gespeichert, 
          die Verweise auf übergeordnete Objekte.
        </dd>
        <dt><code>service</code></dt>
        <dd>
          im service Teil werden administrative und teils automatisch generierte Metadaten gespeichert, 
          z. B. das Änderungsdatum und (beim Import) Verweise auf Access Control Listen zur Zugriffssteuerung.
        </dd>
      </dl>
    </section>

    <section>
      <title>Hierarchisches Klassifikationssystem</title>
      <p>
        Um eine bessere Wiederauffindbarkeit von Informationen, besonders in großen Datenbeständen, zu erreichen,
        wurden in
        allen Bereichen der Informationsverarbeitung Klassifikationen eingeführt. Dabei kann es sich um sehr
        allgemeine,
        wie die einer Herkunft oder eines Dateiformat-Typs, oder aber fach- bzw. anwendungsspezifische
        Klassifikationen
        z. B. eng begrenzte Wissenschafts- oder Sachgebiete, handeln. In beiden Fällen sollte es jedoch
        möglich sein, hier
        auch eine Strukturierung der einzelnen Begriffe abbilden zu können.
      </p>
      <p>
        MyCoRe implementiert ein Datenmodell mit folgenden Eigenschaften:</p>
      <ul>
        <li>Abbildung von hierarchischen Strukturen einer Klassifikation.</li>
        <li>Eindeutige Identifizierung einer Kategorie.</li>
        <li>Speicherung der Kategorie-Bezeichner in mehreren Sprachen.</li>
        <li>Speicherung von Text-Beschreibungen zu den einzelnen Kategorien.</li>
        <li>Speicherung einer URL zu jeder einzelnen Kategorie.</li>
        <li>Jede Klassifikation kann mittels Online-Editor oder offline als XML-Datei bearbeitet werden.</li>
      </ul>
      <p>
        Auf die im MyCoRe-Projekt gespeicherten Klassifikationen kann von den Metadaten aus via einer Referenz aus
        Klassifikations- und Kategorie-ID zugegriffen werden. Neben der Einbindung der Klassifikationen in die Metadaten
        des zu speichernden Objektes ist es auch möglich, Recherchen via Navigation über diese Klassifikationen
        durchzuführen.
      </p>
      <img src="images/classificationdemo.png" alt="Klassifikation" title="Klassifikation und Klassifikationseditor" />
      <p class="klein">
        <strong>Abbildung 1.4:</strong>
        Beispiel einer Klassifikation und eines Klassifikations-Editors
      </p>
    </section>
    <section>
      <title>Persistent Identifier (URNs)</title>
      <p>
        MyCoRe unterstützt die Generierung, Vergabe und Verwaltung von
        <link href="http://www.persistent-identifier.de/" title="Persistent Identifier - Service der DNB">
          Persistent Identifiers im Namensraum urn:nbn:de</link>
        ,
        wie sie etwa die Deutsche Nationalbibliothek für Online-Publikationen einsetzt. Dokumente erhalten so eine
        dauerhafte, standardisierte und weltweit eindeutige Adresse, unter der sie erreichbar sind. Für die Generierung
        von URNs stehen verschieden Algorithmen zur Verfügung, etwa auf Basis von Zeitstempeln oder fortlaufenden
        Zählern,
        die auch miteinander kombiniert werden können. MyCoRe speichert die URN, berechnet und testet ggf. die
        zugehörige
        Prüfsumme und implementiert einen lokalen URN-Resolver. Vergebene URNs können entweder über die
        OAI-Schnittstelle
        mittels Epicur, oder über eine automatisch generierte E-Mail bei der Deutschen
        Nationalbibliothek registriert werden.
      </p>
    </section>

  </body>
</document>