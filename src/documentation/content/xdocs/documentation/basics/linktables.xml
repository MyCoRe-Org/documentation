<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Die Link Tabellen</title>
    <release>2015.05</release>
    <release>2016.06</release>
    <authors>
      <person name="Jens Kupferschmidt" email="[EMAIL PROTECTED]" />
      <person name="Kathleen Neumann" email="[EMAIL PROTECTED]" />
    </authors>
    <abstract>Die Seite beschreibt die Referenztabelle über Links zwischen MyCoRe-Objekten.</abstract>
  </header>
<body>

   <section>
    <title>Allgemeines</title>
    <p>
    Neben der Indizierung der Metadaten zur Suche wird auch über einen entsprechenden Event-Handler
    (<strong>MCRLinkTableEventHandler</strong>) dafür gesorgt, dass Verweise zwischen den einzelnen Metadaten-Objekten
    gesondert in einer Datenbanktabelle gespeichert werden. Über entsprechende Zugriffe sind so Abfragen von
    Referenzen und Zählungen möglich. Die Definition des Tabellennamens erfolgt in der Konfigurationsdatei
    <code>mycore.private.properties</code>
    </p>

    <source class="code">MCR.Persistence.LinkTable.Store.Table=MCRLINKHREF</source>

    <p>Die Tabelle enthält die Spalten MCRFROM, MCRTO, MCRTYPE, MCRATTR.</p>
    <ul>
    <li>MCRFROM enthält die Quelladresse (Source) des Link (i.d.R. eine MCRObjectID).</li>
    <li>MCRTO enthält die Zieladresse (Target/Destination) des Link. Dies kann u. a. eine MCRObjectID sein. Links auf
    Kategorien von Klassifikationen werden in der Form {classid}##{categid} abgespeichert.</li>
    <li>MCRTYPE enthält den Typ des Links. Derzeit sind folgende Typen vorgesehen:
    <ul><li>parent – Link zu einem Elternobjekt</li>
        <li>child – Link zu einem Kindobjekt</li>
        <li>derivate – Link zu einem Derivate</li>
        <li>classid – Link zu einer Kategorie einer Klassifikation</li>
        <li>reference – Link zu einem anderen Metadaten-Objekt</li>
    </ul>
    </li>
    <li>MCRATTR – derzeit nicht belegt</li>
    </ul>
   </section>

   <section>
    <title>Zugriff via API</title>
    <p>
    Der Zugriff auf die Link-Tabellen mittels API erfolgt über die Klasse
    <code>org.mycore.datamodel.metadata.MCRLinkTableManager.</code> Diese organisiert auch den Zugiff auf die
    Persistenz-Schicht durch Nutzung eines Interface.
    </p>
    <source class="code"><![CDATA[
MCRLinkTableManager LTM = MCRLinkTableManager.instance();
ArrayList to = LTM.getSourceOf(from,“reference“);]]></source>

    <img src="images/progguide_linktable.jpg" alt="Klassendiagramm" title="Klassendiagramm"/>
    <p class="klein"><strong>Abbildung 2.2:</strong> Klassendiagramm für die Link Tables</p>

   </section>

   <section>
    <title>Zugriff über die Web-Schnittstellen</title>
    <p>
    Für den Zugriff via Web stellt das System ein Servlet bereit. Dieses liefert als Rückgabewert ein
    mcr.results-XML-Objekt. Abhängig von der Angabe der Parameter from oder to enthält das Ergebnis die ID's der
    Ziel- oder Quellobjekte. Wird der Parameter type weggelassen, so ist 'reference' der Standardwert.
    </p>
    <p>
    <source class="code">http://myhost/servlets/MCRLinkServlet?XSL.Style=xml&amp;from=DocPortal_Document_00000001&amp;type=derivate</source>
    </p>
    <p>
    Alternativ kann der Zugriff über den WebService erfolgen. Dies geschieht entweder über den URIResolver
    (Siehe Beschreibung des URIResolvers in diesem Handbuch) oder direkt als URL. Die WebService URL
    lautet dazu beispielsweise:
    </p>
    <source class="code">http://localhost:8481/services/MCRWebService?method=MCRDoRetrieveLinks&amp;
        to=TestPapyri_schrift_00000001</source>
   </section>

</body>
</document>

