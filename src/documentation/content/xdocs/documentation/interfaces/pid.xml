<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Persistent Identifier</title>
    <abstract>
      MyCoRe bietet verschiedene Möglichkeiten an, Persistente Identifier zu generieren. Es ist
      möglich URNs oder Handle zu erzeugen. Für die Registrierung einer DOI wird aktuell ein
      Stylesheet angeboten, das aus MyCoRe-MODS-Objekten ein datacite-Format generiert, das dann
      entsprechend zur Registrierung genutzt werden kann.
    </abstract>
  </header>
  <body>

  <section>
    <title>Nutzung der URN-Vergabe</title>
    <section>
      <title>URN in der Anwendung</title>
      <p>
        Um die URN-Vergabe für Dokumente und deren Derivate zu aktivieren, muss das folgende
        Property für die entsprechenden MyCoRe-Objekttypen definiert werden:
      </p>
      <pre class="brush: bash">
        MCR.URN.Enabled.Objects=mods
      </pre>
      <p>
        Soll für mehrere Objekttypen die URN-Vergabe ermöglicht werden, so
        müssen alle Typen durch Komma getrennt an dieser Stelle angegeben werden:
      </p>
      <pre class="brush: bash">
        MCR.URN.Enabled.Objects=document,file,certificate
      </pre>
      <p>
        In der Anwendung MIR ist die URN-Vergabe für MODS-Dokumente standardmäßig
        aktiviert. Werden Dateien angehangen, so kann über das Aktionen-Menü des
        jeweiligen Derivates eine URN für das Derivat erzeugt werden.
      </p>
    </section>
    <section>
      <title>Das MCRAddURNToObjectServlet</title>
      <p>
        In der Anwendung kann das <a href="http://www.mycore.de/generated/mycore/apidocs/index.html?org/mycore/urn/servlets/MCRAddURNToObjectServlet.html"
        >MCRAddURNToObjectServlet</a> genutzt werden, um je nach Anforderung die URN zu erzeugen. Dafür stehen die folgenden
        Optionen zur Verfügung:
      </p>
      <table class="table">
        <tr>
          <th>URL-Parameter</th>
          <th>Werte</th>
          <th>Beschreibung</th>
        </tr>
        <tr>
          <td>object</td>
          <td>ObjectID / DerivatID</td>
          <td>Pflichtangabe, übergibt die ID des Objektes bzw. Derivates, für das eine URN erzeugt werden soll; ohne weitere Parameter wird bei Angabe einer
              Objekt-ID eine URN in den Metadaten eingetragen, bei Angabe einer Derivat-ID bekommt das Derivat eine URN und alle enthaltenen Dateien bekommen
              eine darauf aufbauende URN-granular</td>
        </tr>
        <tr>
          <td>target</td>
          <td>"file" oder "derivate"</td>
          <td>optional und nur in Kombination mit <code>object=&lt;DerivatID&gt;</code> möglich; "file" gibt an, dass die URN
              für eine einzelne Datei erzeugt werden soll; "derivate" gibt an, dass die URN nur für das Derivat erzeugt werden soll</td>
        </tr>
        <tr>
          <td>file</td>
          <td>Pfad zur Datei innerhalb des Derivates, für die eine URN erzeugt werden soll</td>
          <td>optional und nur in Kombination mit <code>object=&lt;DerivatID&gt;</code> und <code>target=file</code></td>
        </tr>
      </table>
      <p>
        Wird die URN in den Metadaten-Abschnitt generiert, so hat diese folgende Form:
      </p>
      <pre class="brush: xml"><![CDATA[
        <def.identifier>
          <identifier type="urn">urn:foo:bar</identifier>
        </def.identifier>]]>
      </pre>
    </section>
    <section>
      <title>Die Implementierung</title>
      <p>
        Die URN-Funktionalität wird in der MyCoRe-Komponente <code>mycore-urn</code> bereitgestellt.
      </p>
      <p>
        In der Basisimplementierung sorgt der <a href="http://www.mycore.de/generated/mycore/apidocs/index.html?org/mycore/urn/services/MCRURNProvider.html"
        >MCRURNProvider</a> für die Erzeugung
        der URN. Dieser generiert die URN nach einem in den Properties definierten Schema:
      </p>
      <pre class="brush: bash">
          MCR.URN.Provider.Class=org.mycore.urn.services.MCRURNProvider
        # CHANGE: Subnamespace for Campus MyCoRe
          MCR.URN.SubNamespace.Default.Prefix=urn:nbn:de:mcr:1-
          MCR.URN.SubNamespace.Default.NISSBuilder=org.mycore.urn.services.MCRNISSBuilderDateCounter
          MCR.URN.SubNamespace.Default.NISSPattern=yyyyMMdd-HHmmss-
          #MCR.URN.SubNamespace.Default.NISSBuilder=org.mycore.urn.services.MCRNISSBuilderUUID
      </pre>
      <p>
        Die gelisteten Properties zeigen die Standard-Konfiguration. Diese können (und sollten) entsprechend in den
        Properties der Anwendung angepasst werden. Die Komponente <code>mycore-urn</code> bringt zwei Möglichkeiten mit,
        eine URN zu generieren. Es kann eine UUID (<a href="http://www.mycore.de/generated/mycore/apidocs/index.html?org/mycore/urn/services/MCRNISSBuilderUUID.html"
        >MCRNISSBuilderUUID</a>) erzeugt werden, oder anhand des Zeitpunktes, zu dem die URN
        erzeugt wird. Das genaue Muster dafür kann mittels des NISSPattern-Properties
        (<a href="http://www.mycore.de/generated/mycore/apidocs/index.html?org/mycore/urn/services/MCRNISSBuilderDateCounter.html"
        >MCRNISSBuilderDateCounter</a>) definiert werden.
      </p>
      <p>
        Reichen die Optionen über die Properties nicht aus und die URNs sollen mit einem
        anderen Aufbau generiert werden, so muss dafür eine eigene Klasse geschrieben werden,
        die das <code>org.mycore.services.urn.IURNProvider</code>-Interface implementiert oder
        einfacher gleich von <code>org.mycore.services.urn.AbstractURNProvider</code>
        abgeleitet wird. Die neue Klasse muss dann mit dem vollen Klassenpfad als Wert
        für das Property <code>MCR.URN.Provider.Class</code> gesetzt werden.
      </p>
      <p>
        Die erzeugten URNs werden sowohl in der Datenbanktabelle
        <code>MCRURN</code>, als auch im Derivate bzw. Objekt selber abgelegt.
      </p>
    </section>
  </section>
  <section>
    <title>DOI-Registrierung über datacite</title>
    <p>
      <span class="label label-info">2016.06</span> Um DOIs aus der MyCoRe-Anwendung heraus
      zu prägen und bei DataCite über die REST-API zu registrieren stellt MyCoRe die Komponente
      <code>mycore-pi</code> mit einer entsprechenden Implementierung bereit. Diese
      basiert auf dem MyCoRe-MODS-Datenmodell. Mit der folgenden Konfiguration kann die
      DOI-Registrierung aktiviert werden:
    </p>
    <pre class="brush: bash">
  MCR.DOI.Prefix=10.5072
  MCR.DOI.HostingInstitution=MyCoRe Community
  MCR.DOI.NISSPattern=yyyyMMdd-HHmmss
  MCR.PI.Registration.Datacite=org.mycore.pi.doi.MCRDOIRegistrationService
  MCR.PI.Registration.Datacite.Inscriber=MODSDOI
  MCR.PI.Registration.Datacite.Generator=DateDOI
  MCR.PI.Registration.Datacite.RegisterBaseURL=http://intr2dok.vifa-recht.de
  MCR.PI.Registration.Datacite.Username=
  MCR.PI.Registration.Datacite.Password=
#  MCR.PI.Registration.Datacite.UseTestPrefix=true

  MCR.PI.Registration.Datacite.Transformer=datacite
  MCR.PI.Generator.UUIDDOI=org.mycore.pi.doi.MCRUUIDDOIGenerator
  MCR.PI.Generator.DateDOI=org.mycore.pi.doi.MCRCreateDateDOIGenerator
  MCR.PI.Inscriber.MODSDOI=org.mycore.mods.identifier.MCRMODSDOIPersistentIdentifierInscriber
  MCR.PI.Parsers.doi=org.mycore.pi.doi.MCRDOIParser
    </pre>
    <p>
      Nachdem die Anwendung entsprechend konfiguriert wurde, kann mittels des URL-Parameters
      <code>XSL.Transformer=datacite</code> das datacite-XML abgerufen werden. Sollte im MODS
      bereits eine DOI angegeben sein, wird diese angezeigt. Ist noch keine DOI erfasst, wird
      diese entsprechend der Konfiguration erstellt.
    </p>
    <div style="float:right;text-align:right;">
      <img src="images/mir/register_doi_menu.png" alt="MIR-Aktionen-Menü mit aktivierter DOI-Registrierung" />
      <p class="klein"><strong>Abbildung 1:</strong> MIR-Aktionen-Menü einer Publikation</p>
    </div>
    <p>
      Die Anwendung MIR stellt diese Funktionalität bereit, wenn das entsprechende Property
      <code>MIR.registerDOI=true</code> gesetzt wird. Dann erscheint im Aktionen-Menü eines
      einzelnen Objektes ein weiterer Menüpunkt "DOI Registrieren".
    </p>
  </section>
  </body>
</document>
