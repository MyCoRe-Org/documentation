<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Skeleton</title>
    <version>2015-04-23</version>
    <authors>
      <person email="[EMAIL PROTECTED]" name="Kathleen Neumann, Wiebke Oeltjen" />
    </authors>
  </header>

  <body>

   <!-- Include required JS files -->
   <script type="text/javascript" src="/documentation/skin/shCore.js"></script>
   <!--
    At least one brush, eg. XML. You need to include a brush for every
    language you want to highlight
    -->
   <script type="text/javascript" src="/documentation/skin/shBrushXml.js"></script>
   <script type="text/javascript" src="/documentation/skin/shBrushBash.js"></script>
   <script type="text/javascript" src="/documentation/skin/shBrushJava.js"></script>

    <section>
      <title>Kurzanleitung zum Start mit dem "Skeleton"</title>

      <p>
        Das „Skeleton“ ist quasi ein Gerüst zum Erstellen einer eigenen MyCoRe-Anwendung. Diese minimale Webanwendung kann je nach eigenem Bedarf schrittweise um weitere Komponenten und Funktionen erweitert werden. Eigene Anforderungen an das Layout können ebenso einfach realisiert werden, wie Erweiterungen am Datenmodell oder an Kallifikationen. Auch das Rollenmodell lässt sich erweitern und anpassen. Als Vorlage kann die sehr viel umfangreichere Webanwendung „MIR“ verwendet werden. Im Folgenden wird kurz beschrieben, wie das „Skeleton“ verwendet werden kann. 
      </p>

      <h3>Voraussetzungen</h3>
      <ul>
        <li>Tomcat v7.0.27 oder höher (bzw. ServletContainer mit Servlet-3.0-Unterstützung)</li>
        <li>Solr-Server</li>
        <li>relationales Datenbanksystem</li>
      </ul>

      <section>
        <title>1. Quellen herunterladen</title>
        <p>
          Hier kann das aktuelle <a href="https://server.mycore.de/svn/skeleton/trunk/skeleton">Skeleton</a>
          heruntergeladen werden: <code>https://server.mycore.de/svn/skeleton/trunk/skeleton</code>.
        </p>
      </section>

      <section>
        <title>2. Deployen</title>
        <p>
          Vor dem Deployen müssen gegebenenfalls Klassifikationen und Datenmodellspezifikationen ergänzt werden. Anschließend wird das Kommando <code>mvn clean install</code> aufgerufen.
          Nun steht in <code>skeleton-cli/target</code> ein <code>zip</code> bzw. <code>zip.gz</code> für die MyCoRe-Kommandozeile zur Verfügung. Das <code>zip</code> bzw. <code>zip.gz</code>kann nun in einem beliebigen Projektverzeichnis auf dem Anwendungs-Server entpackt werden.
        </p>
      </section>

      <section>
        <title>3. Konfigurieren</title>
        <h3>Konfigurationsverzeichnis generieren</h3>
        <p>
          Anschließend wird das Konfigurations-Verzeichnis generiert, indem je nach Betriebssystem das folgende Kommando aufgerufen wird. Es ist darauf zu achten, dass der Name des Konfigurationsverzeichnisses dem Namen der Webanwendung entspricht, in diesem Beispiel also <code>skeleton</code>:
        <ul>
          <li><code>bin/skeleton.sh create configuration directory</code> (Linux)</li>
          <li><code>bin\skeleton.bat create configuration directory</code> (Windows)</li>
        </ul>
          Im Nutzerverzeichnis wird damit ein MyCoRe-Konfigurationsverzeichnis generiert,
          das unter Linux <code>~/.mycore/skeleton</code> heißt und bei Windows im Verzeichnis
        <code>c:\Users\&#60;userName&#62;\AppData\Local\MyCoRe\skeleton\</code> zu finden ist.
        <h3>Datenbank und Solr konfigurieren</h3>
          Im Konfigurationsverzeichnis wird nun die Datenbank und Solr konfiguriert.
        </p>
      </section>

      <section>
        <title>4. Daten laden</title>
        <p>
          Nun können die Klassifikationen und Nutzer in die DB geladen werden. Dazu das Kommando aufrufen:
        </p>
        <ul>
          <li><code>bin/skeleton.sh process config/setup-commands.txt</code> (Linux)</li>
          <li><code>bin\skeleton.bat process config/setup-commands.txt</code> (Windows)</li>
        </ul>
       </section>
     </section>

   <!-- Finally, to actually run the highlighter, you need to include this JS on your page -->
   <script type="text/javascript">
       SyntaxHighlighter.all()
   </script>

  </body>
</document>
