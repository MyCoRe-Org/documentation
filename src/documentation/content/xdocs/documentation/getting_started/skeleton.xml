<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Mit dem 'Skeleton' zur eigenen Anwendung</title>
    <version>2015-04-24</version>
    <authors>
      <person email="[EMAIL PROTECTED]" name="Kathleen Neumann" />
      <person email="[EMAIL PROTECTED]" name="Wiebke Oeltjen" />
      <person email="[EMAIL PROTECTED]" name="Robert Stephan" />
    </authors>
    <abstract>
      Zur Entwicklung einer eigenen MyCoRe-Anwendung stellen wir ein Anwendungsgerüst
      zur Verfügung, das als Einstieg dienen soll.
    </abstract>
  </header>

  <body>

   <!-- Include required JS files -->
   <script type="text/javascript" src="/documentation/skin/shCore.js"></script>
   <!--
    At least one brush, eg. XML. You need to include a brush for every
    language you want to highlight
    -->
   <script type="text/javascript" src="/documentation/skin/shBrushXml.js"></script>
   <script type="text/javascript" src="/documentation/skin/shBrushBash.js"></script>
   <script type="text/javascript" src="/documentation/skin/shBrushJava.js"></script>

    <section>
      <title>Installation von "Skeleton"</title>

      <p>
        Das „Skeleton“ ist quasi ein Gerüst zum Erstellen einer eigenen MyCoRe-Anwendung. Diese minimale Webanwendung kann je nach eigenem Bedarf schrittweise um weitere Komponenten und Funktionen erweitert werden. Eigene Anforderungen an das Layout können ebenso einfach realisiert werden, wie Erweiterungen am Datenmodell oder an Klassifikationen. Auch das Rollenmodell lässt sich erweitern und anpassen. Als Vorlage kann die sehr viel umfangreichere Webanwendung „MIR“ verwendet werden. Im Folgenden wird kurz beschrieben, wie das „Skeleton“ verwendet werden kann.
      </p>

      <h3>Voraussetzungen</h3>
      <ul>
        <li>JDK 1.8</li>
        <li>Tomcat v8 oder höher (bzw. ServletContainer mit Servlet-3.1-Unterstützung)</li>
        <li>SVN 1.8 oder höher</li>
        <li>Maven 3 oder höher</li>
        <li>Apache Solr 4.10</li>
        <li>relationales Datenbanksystem</li>
      </ul>

      <section>
        <title>1. Quellen herunterladen</title>
        <p>Zuerst sollte ein Arbeitsverzeichnis angelegt werden.<br /> 
           (z.B. <code>C:\skeleton\workspace</code> oder <code>~/skeleton/workspace</code>).</p>
        <p>
          Danach wechselt man in dieses Verzeichnis und lädt das aktuelle <a href="https://server.mycore.de/svn/maven/skeleton/trunk">Skeleton</a>
          mit dem Kommando <code>svn checkout https://server.mycore.de/svn/maven/skeleton/trunk</code> herunter.
        </p>
      </section>

      <section>
        <title>2. CLI erstellen</title>
        <p>
          Im Arbeitsverzeichnis wird mit dem Kommando <code>mvn clean install</code> die Skeleton Anwendung erstmals gebaut.
          Nun steht in <code>skeleton-cli/target</code> ein <code>zip</code> bzw. <code>zip.gz</code> für die MyCoRe-Kommandozeile zur Verfügung. Das <code>zip</code> bzw. <code>zip.gz</code>kann nun in einem beliebigen Projektverzeichnis auf dem Anwendungs-Server entpackt werden.
        </p>
      </section>
      
       <section>
        <title>3. Konfigurieren</title>
        <h3>Konfigurationsverzeichnis generieren</h3>
        <p>
          Zuerst wechsel man in das gerade erstellte Verzeichnis der CLI, z.B.:
          <code>cd c:\skeleton\skeleton-cli-0.1-SNAPSHOT</code>
         </p>
         <p>
           Anschließend wird das Konfigurations-Verzeichnis generiert, indem je nach Betriebssystem 
           das folgende Kommando aufgerufen wird: 
           <dl>
            <dt>Linux:</dt><dd> <code>bin/skeleton.sh create configuration directory</code></dd>
            <dt>Windows:</dt><dd> <code>bin\skeleton.bat create configuration directory</code></dd>
          </dl>
          Im Nutzerverzeichnis wird dadurch ein MyCoRe-Konfigurationsverzeichnis generiert,
          das unter Linux <code>~/.mycore/skeleton</code> heißt und bei Windows im Verzeichnis
          <code>c:\Users\&#60;userName&#62;\AppData\Local\MyCoRe\skeleton\</code> zu finden ist.
        </p>
        <p>
          Es ist darauf zu achten, dass der Name des Konfigurationsverzeichnisses dem Namen der 
          Webanwendung entspricht, in diesem Beispiel also <code>skeleton</code>:
        </p>
        <h3>Datenbank konfigurieren</h3>
        <p>
          Zur Konfiguration der Datenbank muss die <code>hibernate.cfg.xml</code> im Konfigurationsverzeichnis
          angepasst werden (siehe <a href="site:hibernate">Datenbank / Hibernate</a>).
        </p>
        
        <h3>Solr konfigurieren</h3>
        <p>
        
        </p>
      </section>

      <section>
        <title>4. Daten laden</title>
        <p>
          Nun können die Klassifikationen und Nutzer in die DB geladen werden. Dazu das Kommando aufrufen:
        </p>
        <dl>
          <dt>Linux:</dt><dd> <code>bin/skeleton.sh process config/setup-commands.txt</code></dd>
          <dt>Windows:</dt><dd> <code>bin\skeleton.bat process config/setup-commands.txt</code></dd>
        </dl>
       </section>
     </section>

     <section>
       <title>Schritt-für-Schritt zur eigenen Anwendung</title>

       <section>
         <title>1. Datenmodell erstellen</title>
         <p>
           Im ersten Schritt muss das eigene <a href="site:mcrobj_datadef">Datenmodell</a> basierend auf den <a href="site:mcrobj_datatypes">MyCoRe-Datentypen</a>
           spezifiziert werden.
         </p>
         <p>Das CLI muss neu gebaut werden (siehe 2.)</p>
       </section>

       <section>
         <title>2. Erfassungsmasken</title>
         <p>
           Um eigene Erfasssungsmasken zu erstellen, muss als erstes das HTML-Formular nach eigenen Anforderungen erstellt werden.
           Dies kann z.B. mit Bootstrap und unter Verwendung des <a href="http://bootsnipp.com/forms?version=3">FormBuilder für Bootstrap 3</a>
           realisiert werden.
         </p>
         <div style="text-align:center;margin:10px 0;">
          <img src="images/skeleton/formbuilder.png" alt="Formular erstellen" style="margin:5px;border:1px solid gray;" width="550px" /><br />
          <span class="klein"><strong>Abbildung:</strong> Schnell zum Bootstrap-Formular mit dem Formbuilder</span>
         </div>
         <p>
           <span class="label label-warning">Achtung:</span> Der Formbuilder setzt <code>name</code>-Attribute für Buttons, Input-Felder, etc.
           Diese kann der XEditor nicht verarbeiten und produziert Fehler. Diese Attribute also bitte unbedingt entfernen!
         </p>
         <p>
           Nachdem das HTML-Formular fertig ist, muss dies mit den entsprechenden XEditor-Bestandteilen angereichert werden. Alle Details
           dazu finden sich in der <a href="site:xeditor">XEditor-Dokumentation</a>.
         </p>
       </section>
     </section>

   <!-- Finally, to actually run the highlighter, you need to include this JS on your page -->
   <script type="text/javascript">
       SyntaxHighlighter.all()
   </script>

  </body>
</document>
