<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Servlets zur Manipulation von MyCoRe-Objekten</title>
    <version>2016-08-04</version>
    <authors>
      <person email="[EMAIL PROTECTED]" name="Jens Kupferschmidt" />
    </authors>
    <abstract>
      Neben kompletten Workflow-Szenarien gibt es auch eine Reihe einzelner Servlets, aus denen sich
      Arbeitsabläufe zur Bearbeitung der Metadaten und digitalen Objekte ableiten lassen. Dieser Abschnitt beschäftigt
      sich mit dem Aufruf dieser Servlets.
    </abstract>
  </header>
  <body>

    <section>
      <title>Das (MCR)CreateObjectServlet / (MCR)UpdateObjectServlet</title>
      <p>
        Als erste Funktionalität soll das Create und Update von MyCoRe-Metadaten-Objekten
        <em>MCRObject</em>
        beschrieben werden.
      </p>
      <p>
        Innerhalb der HTML-Navigation in der Anwendung wird die entsprechende XEditor-Seite aufgerufen. Dabei ist es
        möglich, dem Aufruf eine MyCoRe-ProjektID mitzugeben, welche dann für das Generieren der
        <em>MCRObjectID</em>
        genutzt wird.
      </p>
      <p>
        Der Codebaustein
        <code>... href="/editor_form_work.xed?origin=BachDigital" ...</code>
        für Create ruft ein XEditor-Formular auf und übergibt die ProjectID
        <em>BachDigital</em>
        . Für den Update-Aufruf ist das
        <em>origin</em>
        -Attribut weg zu lassen.
      </p>
      <p>Innerhalb des Formulars sind dann Abschnitte für die Umsetzung der MCRObjectID und die Submit-Button
        vorzusehen.</p>
      <pre class="brush: xml;">
<![CDATA[...
  <xed:choose>
    <xed:when test="string-length($origin) &gt; 0">
      <xed:bind xpath="@ID" initially="{$origin}_work_00000000" />
    </xed:when>
    <xed:when test="xed:call-java('org.mycore.common.xml.MCRXMLFunctions','getCurrentUserAttribute','origin')">
      <xed:bind xpath="@ID" initially="{xed:call-java('org.mycore.common.xml.MCRXMLFunctions','getCurrentUserAttribute','origin')}_work_00000000" />
    </xed:when>
    <xed:otherwise>
      <xed:bind xpath="@ID" initially="{$MIR.projectid.default}_work_00000000" />
    </xed:otherwise>
  </xed:choose>
...
  <button type="submit" class="btn btn-default" xed:target="cancel">
    <xed:output i18n="button.cancel" />
  </button>
  <xed:choose>
    <!-- xed:when test="/mycoreobject/@ID = 'BachDigital_work_00000000'" -->
    <xed:when test="contains(/mycoreobject/@ID, '_00000000')">
      <button type="submit" class="btn btn-primary" xed:target="servlet" xed:href="CreateObjectServlet">
        <xed:output i18n="button.save" />
      </button>
    </xed:when>
    <xed:otherwise>
      <button type="submit" class="btn btn-primary" xed:target="servlet" xed:href="UpdateObjectServlet">
        <xed:output i18n="button.save" />
      </button>
    </xed:otherwise>
  </xed:choose>
...]]></pre>
    </section>

    <section>
      <title>Das MCRDerivateServlet</title>
      <p>
        Mit Hilfe des MCRDerivateServlet können manipulationen an den Derivaten vorgenommen werden. Mit dem
        <code>todo</code>
        <em>ssetfile</em>
        kann die Startdatei festgelegt werden. Mit
        <em>sdelfile</em>
        wird eine Datei aus dem Derivate gelöscht.
      </p>
      <p>Syntax des Servlet-Aufrufes:</p>
      <pre class="brush: xml;">
<![CDATA[{$WebApplicationBaseURL}servlets/MCRDerivateServlet?derivateid={$derId}&amp;objectid={$objID}&amp;todo=ssetfile&amp;file={$fileName}]]></pre>
      <p>Beispiel des Servlet-Aufrufes:</p>
      <pre class="brush: xml;">
<![CDATA[http://localhost:8291/servlets/MCRDerivateServlet?derivateid=MIR_derivate_00000001&amp;objectid=MIR_mir_00000001&amp;todo=ssetfile&amp;file=myimage04.jpg]]></pre>
      <ul>
        <li>
          <code>derivateid</code>
          - die MyCoReID des derivates, welches bearbeitet werden soll.
        </li>
        <li>
          <code>objectid</code>
          - die MyCoReID des Metadatenobjektes, zu dem das Derivate gehört.
        </li>
        <li>
          <code>todo</code>
          - die Funktion, welche ausgeführt werden soll.
        </li>
        <li>
          <code>file</code>
          - der Pfad zu der Datei, auf welche die Funktion ausgeführt werden soll.
        </li>
      </ul>
    </section>
  </body>
</document>