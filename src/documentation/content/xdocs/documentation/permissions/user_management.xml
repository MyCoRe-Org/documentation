<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Managen der internen Rollen und Nutzer</title>
    <release>2015.05</release>
    <release>2016.06</release>
    <version>2016-11-09</version>
    <authors>
      <person email="[EMAIL PROTECTED]" name="Kathleen Neumann" />
      <person email="[EMAIL PROTECTED]" name="Jens Kupferschmidt" />
    </authors>
    <version>2015-11-05</version>
    <abstract>Beschreibung der Möglichkeiten der Administration interner Rollen und Nutzer online und über
      das CLI.
    </abstract>
  </header>

  <body>
    <section>
      <title>Allgemeines</title>
      <p>
        MyCoRe bietet ein komplexes System zum Laden und Bearbeiten von Rollen und Nutzern. Dies kann
        sowohl online über
        die Nutzung von Servlet-Schnittstellen wie auch offline via Kommandos erfolgen.
        Daneben ist es möglich externe
        Authentifizierungsmechanismen einzubenden, welche aber nicht auf dieser Seite erläutert werden sollen.
      </p>
    </section>

    <section>
      <title>Initialisierung des Rollen- und Nutzersystems</title>
      <p>
        Beim neu Anlegen einer Anwendung ist darauf zu achten, dass das Rollen- und Nutzersystem angelegt wurde. dies
        geschiet mit dem folgenden Kommando. Anschließend ist die Rolle
        <em>admin</em>
        und der Nutzer
        <em>administrator</em>
        mit dem Password
        <code>alleswirdgut</code>
        angelegt.
        <strong>Dieses sollte geändert werden!!!</strong>
      </p>
      <dl>
        <dt>
          <code>init superuser</code>
        </dt>
        <dd>Das Kommando initialisiert das Benutzersystem.</dd>
      </dl>
    </section>

    <section>
      <title>Rollen</title>

      <p>
        Die XML-Ausprägung von Rollen ist relativ simpel gehalten. Sie enthält nur den Namen der Gruppe und einige
        beschreibende Elemente.
      </p>
      <pre class="brush: xml;">
<![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<role name="editor">
  <label xml:lang="de"
    text="Die Beispielrolle editor"
    description="Eine Rolle zur Beschreibung der editor Gruppe" />
  <label xml:lang="en"
    text="The demo editor role"
    description="A role demonstration for an editor group" />
</role>]]></pre>

      <section>
        <title>Online-Administration</title>
        <p>
          Alle Rollen in MyCoRe in einer spezielle Klassifikation
          <em>mcr-roles</em>
          gespeichert und nutzen damit die Funktionalitäten des Klassifiaktionssystems. Dies gilt auch für die
          Bearbeitung der Rollen. Hier kommt auch der Klassifikationseditor zu Einsatz.
        </p>
        <p>
          Um die Administration der Rollen abzusichern, ist die Klassifikation
          <em>mcr-roles</em>
          über das Rechtesystem abgesichert. Für die Bearbeitung der Klassifikation
          <em>mcr-roles</em>
          sind daher Zugriffsrechte
          <em>writedb</em>
          und
          <em>deletedb</em>
          für diese Klassifikation in den ACL-Listen einzutragen. Hierbei ist die konkrete Ausprägung abhängig von der
          genutzten Zugriffs-Strategie.Beispielsweise könnte der Eintrag für die Strategie 2 wie folgend aussehen:
        </p>
        <p>
          <code>update permission writedb for id default_class with rulefile grant-admins.xml</code>
          <code>update permission deletedb for id default_class with rulefile grant-admins.xml</code>
        </p>
        <p>
          Nun kann der Klassifikationseditor für die Rollen mit
          <code>/authorization/roles-editor.xml</code>
          aufgerufen werden. Dieser Aufruf kann beispielweise in der Benutzernavigation bei entsprechender Berechtigung
          angeboten werden.
        </p>
      </section>

      <section id="role_commands">
        <title>Kommandos</title>
        <p>Über die <a href="site:cli/cli_overview">MyCoRe Kommandozeile</a> können auch alle administrativen Operationen für Rollen ausgeführt
          werden.
        </p>
        <dl>
          <dt>
            <code>add roles from user file {0}</code>
          </dt>
          <dd>Das Kommando läde Rollen aus einem vorgegeben File {0}.</dd>
          <dt>
            <code>import role from file {0}</code>
          </dt>
          <dd>Das Kommando importiert eine Rolle aus einem vorgegeben File {0}.</dd>
          <dt>
            <code>list all roles</code>
          </dt>
          <dd>Das Kommando listet alle konfigurierten Rollen auf.</dd>
          <dt>
            <code>list role {0}</code>
          </dt>
          <dd>Das Kommando listet eine konfigurierte Rolle {0}.</dd>
          <dt>
            <code>assign user {0} to role {1}</code>
          </dt>
          <dd>Das Kommando weist einen Benutzer {0} eine Rolle {1} zu.</dd>
          <dt>
            <code>unassign user {0} to role {1}</code>
          </dt>
          <dd>Das Kommando entfernt einen Benutzer {0} von einer Rolle {1}.</dd>
          <dt>
            <code>delete role {0}</code>
          </dt>
          <dd>Das Kommando löscht eine Rolle.</dd>
        </dl>
      </section>

      <p>
      </p>
    </section>

    <section>
      <title>Nutzer</title>
      <p>
        Die Attribute von Benutzern des Systems unterteilen sich in drei Bereiche:
      </p>
      <ol>
        <li>Account-Informationen: dazu gehören ID, Passwort, Name, E-Mail-Adresse, ggf. Besitzer des Nutzers</li>
        <li>Rollenzugehörigkeiten: ein Nutzer kann beliebig vielen Rollen angehören, z.B. administrator und editor</li>
        <li>Attribute: hier können beliebige Eigenschaften des Nutzers abgelegt werden</li>
      </ol>
      <p>
        Mit der Eigenschaft
        <code>locked</code>
        kann man festlegen, ob der Nutzer seine Daten selber ändern darf
        oder nicht. Ist locked auf
        <code>true</code>
        gesetzt, dürfen alle Daten geändert werden. Setzt man den Wert
        auf
        <code>false</code>
        , darf der Nutzer nur sein Passwort ändern. Alle anderen Daten sind geschützt und
        können nur vom Administrator
        geändert werden.
      </p>
      <p>
        Die Nutzer werden in der Datenbank abgespeichert, die XML-Repräsentation eines Benutzerobjektes
        zeigt das
        folgende Codebeispiel:
      </p>
      <pre class="brush: xml;"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<user locked="false" name="editorTest" realm="local">
  <owner name="administrator" realm="local" />
  <realName>Testnutzer - Bearbeiter</realName>
  <eMail>mailadresse@des-nutzers.de</eMail>
  <lastLogin>2014-11-14T16:50:07Z</lastLogin>
  <roles>
    <role name="editor" />
  </roles>
  <attributes>
    <attribute name="sex"         value="male" />
    <attribute name="institution" value="Bibliothek der Beispieluniversität" />
    <attribute name="street"      value="Musterstraße 1" />
    <attribute name="city"        value="Musterort" />
    <attribute name="postalcode"  value="12345" />
    <attribute name="tel"         value="+49 111 222 3333" />
  </attributes>
  <password hashType="sha1" hash="passwdsalt" />
</user>
    ]]></pre>

      <section>
        <title>Online-Administration</title>
        <p>
          Für die Verarbeitung der Nutzerdaten ist das
          <code>MCRUserServlet</code>
          zuständig. Der
          Parameter
          <code>'action'</code>
          bestimmt, was getan werden soll. Mögliche Werte sind
          <code>show</code>
          ,
          <code>save</code>
          ,
          <code>delete</code>
          ,
          <code>password</code>
          (ggf.
          mit Angabe der
          <code>'id'</code>
          als zweiten Parameter). Standardmäßig wird die Aktion
          <code>search</code>
          aufgerufen, diese listet alle Nutzer im System auf.
        </p>
        <p>
          Für die Online-Arbeit muss der ausführende Nutzer das
          Privileg
          <code>administrate-users</code>
          haben. Um neue Benutzer anzulegen ist weiterhin das Privileg
          <code>create-users</code>
          erforderlich.
        </p>
        <p>
          Die mycore-user2-Komponente stellt verschiedene Editoren für den Umgang mit dem Nutzer
          bereit, die in der
          folgenden Übersicht beschrieben werden:
        </p>
        <table class="table table-striped">
          <thead>
            <tr>
              <th>Datei</th>
              <th>Beschreibung</th>
              <th>Beispielaufruf</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>new-user.xed</td>
              <td>Erfassungsmaske zur Erstellung eines neuen Nutzers</td>
              <td>authorization/new-user.xed?action=save</td>
            </tr>
            <tr>
              <td>action=show</td>
              <td>Nutzerdaten anzeigen</td>
              <td>servlets/MCRUserServlet?action=show&amp;id=editorTest</td>
            </tr>
            <tr>
              <td>change-user.xed</td>
              <td>Daten eines Nutzers ändern</td>
              <td>authorization/change-user.xed?action=save&amp;id=editorTest</td>
            </tr>
            <tr>
              <td>change-password.xed</td>
              <td>Passwort des angegebenen Nutzers ändern</td>
              <td>authorization/change-password.xed?action=password&amp;id=editorTest</td>
            </tr>
            <tr>
              <td>XSL.step=confirmDelete</td>
              <td>Löschen des Nutzers mit Sicherheitsabfrage</td>
              <td>servlets/MCRUserServlet?action=show&amp;id=editorTest&amp;XSL.step=confirmDelete</td>
            </tr>
          </tbody>
        </table>
      </section>

      <section id="user_commands">
        <title>Kommandos</title>
        <p>Über die <a href="site:cli/cli_overview">MyCoRe Kommandozeile</a> können auch alle administrativen Operationen für Nutzer ausgeführt
          werden.
        </p>
        <dl>
          <dt>
            <code>export all users to directory {0}</code>
          </dt>
          <dd>Das Kommando exportiert alle Nutzerdaten als XML-File in das Verzeichnis {0}.</dd>
          <dt>
            <code>import all users from directory {0}</code>
          </dt>
          <dd>Das Kommando importiert alle Nutzerdaten XML-Files aus dem Verzeichnis {0}.</dd>
          <dt>
            <code>update all users from directory {0}</code>
          </dt>
          <dd>Das Kommando aktualisiert alle Nutzerdaten aus den XML-Files aus dem Verzeichnis {0}.</dd>
          <dt>
            <code>list all users</code>
          </dt>
          <dd>Das Kommando listet alle vorhandenen Nutzer aus.</dd>
          <dt>
            <code>list user {0}</code>
          </dt>
          <dd>Das Kommando listet den Benutzer {0} aus.</dd>
          <dt>
            <code>import user {0} from File {1}</code>
          </dt>
          <dd>Das Kommando importiert einen Benutzer aus dem XML-File {1}.</dd>
          <dt>
            <code>export user {0} to file {1}</code>
          </dt>
          <dd>Das Kommando exportiert die Benutzerdaten in ein XML-File {1}.</dd>
          <dt>
            <code>set password for user {0} to {1}</code>
          </dt>
          <dd>Das Kommando setzt das Password für den Nutzer neu.</dd>
          <dt>
            <code>enable user {0}</code>
          </dt>
          <dd>Das Kommando setzt den Benutzer {0} auf 'enabled'. Der Benutzer kann sich einloggen.</dd>
          <dt>
            <code>disable user {0}</code>
          </dt>
          <dd>Das Kommando setzt den Benutzer {0} auf 'disabled'. Der Benutzer kann sich nicht mehr einloggen.</dd>
          <dt>
            <code>delete user {0}</code>
          </dt>
          <dd>Das Kommando löscht den Benutzer {0}.</dd>
        </dl>
      </section>

    </section>
  </body>
</document>

