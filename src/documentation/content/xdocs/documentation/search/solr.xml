<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Die Solr-Komponente (solr)</title>
    <abstract>Dieser Abschnitt beschreibt die Integrationsmöglichkeiten von Solr in MyCoRe und die bereitgestellten
      Schnittstellen
    </abstract>
  </header>

  <body>
    <section>
      <title>Allgemeines</title>
      <p>
        Die MyCoRe-Anwendungen benötigen einen leistungsstarken Indexer für vielfältige Suchoperationen
        innerhalb der Applikationen. Daher hat sich das MyCoRe-Team für die Einbindung von
        <acronym title="Apache Solr ist ein eingetragenes Markenzeichen der Apache Software Foundation">
        <a href="https://lucene.apache.org/solr/">Apache Solr</a></acronym>
        entschieden. MyCoRe bietet mit dieser Komponente dem Anwender die Möglichkeit,
        seine Daten auf einem Solr-Server abzulegen und zu indizieren.
        Voraussetzung für die Verwendung der Solr-Komponente in der eigenen MyCore-Anwendung ist,
        dass ein solcher Server vom Anwender angelegt und betrieben
        wird. Hinweise dazu enthält diese Anleitung.
      </p>
    </section>

    <section>
      <title>Aufbau eines Solr-Servers</title>
      <p>
        Der Solr-Server wird in Form eines <code>solr-{version}.war</code> Archives ausgeliefert. Da MyCoRe
        noch einige zusätzliche Bibliotheken benötigt, wird ein speziell konfiguriertes
        <code>solr.war</code> über MyCoRe bereitgestellt, das direkt aus dem MyCoRe-Artifactory bezogen
        werden kann:
        <a href="http://artifactory.mycore.de/libs-releases-local/org/mycore/solr/solr/4.8.1/solr-4.8.1.war">Download von solr.war</a>
      </p>
      <p>
        Nun ist mittels einer Servlet-Engine (z. B. Tomcat oder Jetty) der Server zu initiieren. Dabei ist es wichtig zu
        definieren, wo die Daten des Solr-Servers liegen. Unter Tomcat ist dabei folgende Code-Sequenz unter
        <code>{tomcat_home}/conf/Catalina/{hostname|localhost}/solr.xml</code>
        abzulegen. Das angegebene Datenverzeichnis muss dabei existieren.
      </p>
     <pre class="brush: xml"><![CDATA[<Context docBase="/home/user/solr/solr.war"
    debug="0" crossContext="true" >
  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
    allow="127\.0\.0\.1|139\.2\.0\.1" />
  <Environment name="solr/home"
    type="java.lang.String"
    value="/home/user/solr/data"
    overwrite="true"/>
</Context>]]></pre>
    </section>

  </body>
</document>
